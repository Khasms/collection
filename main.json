{"classes":[{"name":"Collection","description":"A Map with additional utility methods. This is used throughout discord.js rather than Arrays for anything that has\nan ID, for significantly improved performance and ease-of-use.","extends":["Map"],"props":[{"name":"[Symbol.toStringTag]","readonly":true,"meta":{"line":135,"file":"lib.es2015.symbol.wellknown.d.ts","path":"C:/Users/John/AppData/Roaming/npm/node_modules/typescript/lib"}},{"name":"constructor","meta":{"line":17,"file":"index.ts","path":"src"}},{"name":"size","readonly":true,"meta":{"line":28,"file":"lib.es2015.collection.d.ts","path":"C:/Users/John/AppData/Roaming/npm/node_modules/typescript/lib"}},{"name":"[Symbol.species]","readonly":true,"meta":{"line":317,"file":"lib.es2015.symbol.wellknown.d.ts","path":"C:/Users/John/AppData/Roaming/npm/node_modules/typescript/lib"}},{"name":"default","readonly":true,"meta":{"line":16,"file":"index.ts","path":"src"}}],"methods":[{"name":"[Symbol.iterator]","description":"Returns an iterable of entries in the map.","returns":"IterableIterator","meta":{}},{"name":"clear","description":"Identical to [Map.clear()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/clear).\nRemoves all elements from the collection.","returns":"void","meta":{"line":65,"file":"index.ts","path":"src"}},{"name":"clone","description":"Creates an identical shallow copy of this collection.","returns":"Collection","examples":["const newColl = someColl.clone();\n"],"meta":{"line":507,"file":"index.ts","path":"src"}},{"name":"concat","description":"Combines this collection with others into a new collection. None of the source collections are modified.","params":[{"name":"collections","description":"Collections to merge"}],"returns":"Collection","examples":["const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);\n"],"meta":{"line":517,"file":"index.ts","path":"src"}},{"name":"delete","description":"Identical to [Map.delete()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/delete).\nDeletes an element from the collection.","params":[{"name":"key","description":"The key to delete from the collection","type":"K"}],"returns":{"description":"`true` if the element was removed, `false` if the element does not exist.\n","types":"boolean"},"meta":{"line":56,"file":"index.ts","path":"src"}},{"name":"difference","description":"The difference method returns a new structure containing items where the key is present in one of the original structures but not the other.","params":[{"name":"other","description":"The other Collection to filter against","type":"Collection"}],"returns":"Collection","meta":{"line":587,"file":"index.ts","path":"src"}},{"name":"each","description":"Identical to\n[Map.forEach()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach),\nbut returns the collection instead of undefined.","params":[{"name":"fn","description":"Function to execute for each element"}],"returns":"Collection","examples":["\ncollection\n .each(user => console.log(user.username))\n .filter(user => user.bot)\n .each(user => console.log(user.username));\n"],"meta":{"line":476,"file":"index.ts","path":"src"}},{"name":"entries","description":"Returns an iterable of key, value pairs for every entry in the map.","returns":"IterableIterator","meta":{}},{"name":"equals","description":"Checks if this collection shares identical items with another.\nThis is different to checking for equality using equal-signs, because\nthe collections may be different objects, but contain the same data.","params":[{"name":"collection","description":"Collection to compare with","type":"Collection"}],"returns":{"description":"Whether the collections have identical contents\n","types":"boolean"},"meta":{"line":532,"file":"index.ts","path":"src"}},{"name":"every","description":"Checks if all items passes a test. Identical in behavior to\n[Array.every()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every).","params":[{"name":"fn","description":"Function used to test (should return a boolean)"}],"returns":"this","examples":["collection.every(user => !user.bot);\n"],"meta":{"line":408,"file":"index.ts","path":"src"}},{"name":"filter","description":"Identical to\n[Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\nbut returns a Collection instead of an Array.","params":[{"name":"fn","description":"The function to test with (should return boolean)"}],"returns":"Collection","examples":["collection.filter(user => user.username === 'Bob');\n"],"meta":{"line":261,"file":"index.ts","path":"src"}},{"name":"find","description":"Searches for a single item where the given function returns a truthy value. This behaves like\n[Array.find()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find).\n<warn>All collections used in Discord.js are mapped using their `id` property, and if you want to find by id you\nshould use the `get` method. See\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get) for details.</warn>","params":[{"name":"fn","description":"The function to test with (should return boolean)"}],"returns":["undefined","V2"],"examples":["collection.find(user => user.username === 'Bob');\n"],"meta":{"line":196,"file":"index.ts","path":"src"}},{"name":"findKey","description":"Searches for the key of a single item where the given function returns a truthy value. This behaves like\n[Array.findIndex()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex),\nbut returns the key rather than the positional index.","params":[{"name":"fn","description":"The function to test with (should return boolean)"}],"returns":["undefined","K2"],"examples":["collection.findKey(user => user.username === 'Bob');\n"],"meta":{"line":220,"file":"index.ts","path":"src"}},{"name":"first","description":"Obtains the first value(s) in this collection.","returns":{"description":"A single value if no amount is provided or an array of values, starting from the end if\namount is negative\n","types":["undefined","V"]},"meta":{"line":93,"file":"index.ts","path":"src"}},{"name":"firstKey","description":"Obtains the first key(s) in this collection.","returns":{"description":"A single key if no amount is provided or an array of keys, starting from the end if\namount is negative\n","types":["undefined","K"]},"meta":{"line":109,"file":"index.ts","path":"src"}},{"name":"flatMap","description":"Maps each item into a Collection, then joins the results into a single Collection. Identical in behavior to\n[Array.flatMap()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap).","params":[{"name":"fn","description":"Function that produces a new Collection"}],"returns":"Collection","examples":["collection.flatMap(guild => guild.members.cache);\n"],"meta":{"line":336,"file":"index.ts","path":"src"}},{"name":"forEach","params":[{"name":"callbackfn"},{"name":"thisArg","type":"any"}],"returns":"void","meta":{}},{"name":"get","description":"Identical to [Map.get()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get).\nGets an element with the specified key, and returns its value, or `undefined` if the element does not exist.","params":[{"name":"key","description":"The key to get from this collection","type":"K"}],"returns":["undefined","V"],"meta":{"line":25,"file":"index.ts","path":"src"}},{"name":"has","description":"Identical to [Map.has()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/has).\nChecks if an element exists in the collection.","params":[{"name":"key","description":"The key of the element to check for","type":"K"}],"returns":{"description":"`true` if the element exists, `false` if it does not exist.\n","types":"boolean"},"meta":{"line":46,"file":"index.ts","path":"src"}},{"name":"hasAll","description":"Checks if all of the elements exist in the collection.","params":[{"name":"keys","description":"The keys of the elements to check for"}],"returns":{"description":"`true` if all of the elements exist, `false` if at least one does not exist.\n","types":"boolean"},"meta":{"line":74,"file":"index.ts","path":"src"}},{"name":"hasAny","description":"Checks if any of the elements exist in the collection.","params":[{"name":"keys","description":"The keys of the elements to check for"}],"returns":{"description":"`true` if any of the elements exist, `false` if none exist.\n","types":"boolean"},"meta":{"line":83,"file":"index.ts","path":"src"}},{"name":"intersect","description":"The intersect method returns a new structure containing items where the keys are present in both original structures.","params":[{"name":"other","description":"The other Collection to filter against","type":"Collection"}],"returns":"Collection","meta":{"line":574,"file":"index.ts","path":"src"}},{"name":"keys","description":"Returns an iterable of keys in the map","returns":"IterableIterator","meta":{}},{"name":"last","description":"Obtains the last value(s) in this collection.","returns":{"description":"A single value if no amount is provided or an array of values, starting from the start if\namount is negative\n","types":["undefined","V"]},"meta":{"line":125,"file":"index.ts","path":"src"}},{"name":"lastKey","description":"Obtains the last key(s) in this collection.","returns":{"description":"A single key if no amount is provided or an array of keys, starting from the start if\namount is negative\n","types":["undefined","K"]},"meta":{"line":141,"file":"index.ts","path":"src"}},{"name":"map","description":"Maps each item to another value into an array. Identical in behavior to\n[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).","params":[{"name":"fn","description":"Function that produces an element of the new array, taking three arguments"}],"examples":["collection.map(user => user.tag);\n"],"meta":{"line":354,"file":"index.ts","path":"src"}},{"name":"mapValues","description":"Maps each item to another value into a collection. Identical in behavior to\n[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).","params":[{"name":"fn","description":"Function that produces an element of the new collection, taking three arguments"}],"returns":"Collection","examples":["collection.mapValues(user => user.tag);\n"],"meta":{"line":373,"file":"index.ts","path":"src"}},{"name":"partition","description":"Partitions the collection into two collections where the first collection\ncontains the items that passed and the second contains the items that failed.","params":[{"name":"fn","description":"Function used to test (should return a boolean)"}],"examples":["const [big, small] = collection.partition(guild => guild.memberCount > 250);\n"],"meta":{"line":290,"file":"index.ts","path":"src"}},{"name":"random","description":"Obtains unique random value(s) from this collection.","returns":{"description":"A single value if no amount is provided or an array of values\n","types":"V"},"meta":{"line":156,"file":"index.ts","path":"src"}},{"name":"randomKey","description":"Obtains unique random key(s) from this collection.","returns":{"description":"A single key if no amount is provided or an array\n","types":"K"},"meta":{"line":173,"file":"index.ts","path":"src"}},{"name":"reduce","description":"Applies a function to produce a single value. Identical in behavior to\n[Array.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).","params":[{"name":"fn","description":"Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,\nand `collection`"},{"name":"initialValue","type":"T"}],"returns":"T","examples":["collection.reduce((acc, guild) => acc + guild.memberCount, 0);\n"],"meta":{"line":437,"file":"index.ts","path":"src"}},{"name":"set","description":"Identical to [Map.set()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/set).\nSets a new element in the collection with the specified key and value.","params":[{"name":"key","description":"The key of the element to add","type":"K"},{"name":"value","description":"The value of the element to add","type":"V"}],"returns":"Collection","meta":{"line":36,"file":"index.ts","path":"src"}},{"name":"some","description":"Checks if there exists an item that passes a test. Identical in behavior to\n[Array.some()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).","params":[{"name":"fn","description":"Function used to test (should return a boolean)"}],"returns":"boolean","examples":["collection.some(user => user.discriminator === '0000');\n"],"meta":{"line":390,"file":"index.ts","path":"src"}},{"name":"sort","description":"The sort method sorts the items of a collection in place and returns it.\nThe sort is not necessarily stable in Node 10 or older.\nThe default sort order is according to string Unicode code points.","params":[{"name":"compareFunction","type":"Comparator"}],"returns":"Collection","examples":["collection.sort((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n"],"meta":{"line":555,"file":"index.ts","path":"src"}},{"name":"sorted","description":"The sorted method sorts the items of a collection and returns it.\nThe sort is not necessarily stable in Node 10 or older.\nThe default sort order is according to string Unicode code points.","params":[{"name":"compareFunction","type":"Comparator"}],"returns":"Collection","examples":["collection.sorted((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n"],"meta":{"line":608,"file":"index.ts","path":"src"}},{"name":"sweep","description":"Removes items that satisfy the provided filter function.","params":[{"name":"fn","description":"Function used to test (should return a boolean)"}],"returns":{"description":"The number of removed entries\n","types":"number"},"meta":{"line":241,"file":"index.ts","path":"src"}},{"name":"tap","description":"Runs a function on the collection and returns the collection.","params":[{"name":"fn","description":"Function to execute"}],"returns":"Collection","examples":["\ncollection\n .tap(coll => console.log(coll.size))\n .filter(user => user.bot)\n .tap(coll => console.log(coll.size))\n"],"meta":{"line":494,"file":"index.ts","path":"src"}},{"name":"toJSON","meta":{"line":612,"file":"index.ts","path":"src"}},{"name":"values","description":"Returns an iterable of values in the map","returns":"IterableIterator","meta":{}},{"name":"defaultSort","params":[{"name":"firstValue","type":"V"},{"name":"secondValue","type":"V"}],"returns":"number","meta":{"line":617,"file":"index.ts","path":"src"}}],"meta":{"line":15,"file":"index.ts","path":"src"}}]}
